// Version 2021.5.3.2110
// License: MIT
import{dirname as e,resolve as t}from"https://deno.land/std/path/mod.ts";function r(e,t,n=null,o=[],l=1,i=1,a=0){for(n=n||Object.keys(e)[0],t+="";t.length>a;){let s,u,c=t.slice(a);e:for(var f in e[n]){let r=e[n][f];r=Array.isArray(r)?r:[r];for(let e of r)if(e instanceof RegExp?u=(c.match(e)||[])[0]:"function"==typeof e?[u,s]=e(c,t.slice(0,a),o)||[]:c.startsWith(e)&&(u=e),u)break e}if(u=Object.assign(u,{type:f,mode:s&&-1!==s?s:n,line:l,col:i}),-1===s)return[...o,u];if(s){let o=[u,...r(e,t,s,[],l,i+u.length,a+u.length)];u=Object.assign(o.join(""),{type:f,tokens:o,mode:n,line:l,col:i})}a+=u.length,o.push(u),l+=(u.match(/\n/g)||[]).length;let p=u.lastIndexOf("\n");i=(p>-1?-p:i)+u.length}return o}{let e=0,t=0,r=/^[ \t\v\f\xa0]+/,o=/^\r?\n/,l=r=>{if(n.allowHashTemplates&&r.startsWith("#{")||r.startsWith("${"))return t>0||(t=1),e=0,[r.slice(0,2),"js"]},i=e=>{if("`"===e[0])return--t,["`",-1]},a=e=>t=>{let r=t.match(/^<!?[\-_\w\xA0-\uFFFF]*/i)||[];if(r.length)return[r[0],e]},f={attribute:/^[\-_$\w\xA0-\uFFFF]*/i,string:[e=>"'"===e[0]?["'","squote"]:void 0,e=>'"'===e[0]?['"',"dquote"]:void 0],equals:"=",template:i,tagEnd:e=>">"===e[0]?[">",-1]:e.startsWith("/>")?["/>",-1]:void 0,whitespace:[r,o],unknown:e=>n.allowUnknownTagTokens?e.match(/^\w+|\S/)||[]:void 0},s=/^<\/[\-_$\w\xA0-\uFFFF]*\s*>/i,u="{ ( [ . ; , < > <= >= == != === !== + - * % << >> >>> & | ^ ! ~ && || ? : = += -= *= %= <<= >>= >>>= &= |= ^= /=".split(/ /g);var n={js:{whitespace:r,ln:o,semicolon:";",comment:[/^\/\/.*(?=\r?\n)/,/^\/\*[\s\S]*?\*\//],template(r){if("`"===r[0])return++t,e=0,["`","template"]},brace1(t){if("{"===t[0])return e++,["{"]},brace2(r){if("}"===r[0])return 0===e&&t?["}",-1]:(e--,["}"])},value:"null true false Infinity NaN undefined globalThis".split(/ /g),hex:/^0x[0-9a-f]+/i,number:/^\d*\.?\d+(e\d+)?/,regex(e,t,r){let n;for(let e=r.length-1;e>=0;e--)if("ln"!==r[e].type&&"whitespace"!==r[e].type&&"comment"!==r[e].type){n=r[e]+"";break}if(u.includes(n)){let t=e.match(/^\/(\\\\|\\\/|\[\^\/]|\[[^]]]|[^/])+\/[agimsx]*/);if(t)return[t[0]]}},operator:"&& || ! => <<= >>= &= ^= |= &&= ||= & | ^ ~ >>> << >> === !=== == != >= > <= < = **= += -= *= /= %= ??= ++ -- ** + - * / % , ... . ( ) [ ] ? : ".split(/ /g),keyword:"await break case catch class constructor const continue debugger default delete do enum else export extends\n\t\t\t\tfinally for from function if implements import in instanceof interface let new package private protected public\n\t\t\t\treturn static super switch this throw try typeof var void while with yield".split(/\s+/g),string:[/^"(\\\\|\\"|[^"])*"/,/^'(\\\\|\\'|[^'])*'/],identifier:/^[_$a-z\xA0-\uFFFF][_$\w\xA0-\uFFFF]*/i},html:{comment:/^<!--[\s\S]*?-->/,closeTag:s,openTag:a("tag"),text:/^[\s\S]*?(?=<)/},template:{expr:l,comment:/^<!--[\s\S]*?-->/,closeTag:s,openTag:a("templateTag"),template:i,text:e=>e.match(n.allowHashTemplates?/^[\s\S]*?(?=<|`|(?<!\\)\${|(?<!\\)#{|(?=$))/:/^[\s\S]*?(?=<|`|(?<!\\)\${|(?=$))/)||[]},templateTag:{expr:l,...f},tag:f,squote:{expr:l,text:/^[\s\S]*?(?=(?<!\\)\${|(?<!\\\$?){|<|`|')/,quote:e=>"'"===e[0]?["'",-1]:void 0},dquote:{expr:l,text:/^[\s\S]*?(?=(?<!\\)\${|(?<!\\\$?){|<|`|")/,quote:e=>'"'===e[0]?['"',-1]:void 0},allowHashTemplates:!1,allowUnknownTagTokens:!1}}var o=e=>{Array.isArray(e[0])&&1===e.length&&(e=e[0]);let t=[];for(let r in e){let n=e[r];t[r]="string"==typeof e[r]?e=>e[0]==n:Array.isArray(n)?l(n):"object"!=typeof n||n.prototype?e[r]:e=>{for(let t in n)if(e[0][t]!=n[t])return!1;return 1}}return t};function l(...e){return t=>{let r=0;for(let n of o(e)){let e=n(t.slice(r));if(!1===e)return!1;r+=e}return r}}l.or=(...e)=>t=>{for(let r of o(e)){let e=r(t);if(!1!==e)return e}return!1},l.not=(...e)=>{let t=l(e);return e=>!1===t(e)&&0},l.nor=(...e)=>t=>{for(let r of o(e))if(r(t)>0)return!1;return 1},l.zeroOrOne=(...e)=>{let t=l(e);return e=>{let r=t(e);return!1===r?0:r}},l.xOrMore=(e,...t)=>{let r=l(t);return t=>{let n=0;for(let o=0;t.length;o++){let l=r(t);if(!1===l)return o>=e&&n;n+=l,t=t.slice(l)}return n}},l.zeroOrMore=(...e)=>l.xOrMore(0,...e),l.oneOrMore=(...e)=>l.xOrMore(1,...e),l.matchFirst=(e,t)=>{let r=l.matchAll(e,t,1);return r.length?r[0]:null},l.matchAll=(e,t,r=1/0)=>{Array.isArray(e)&&(e=l(e));let n=[];for(let o=0;t.length>o&&r>n.length;o++){let r=e(t.slice(o));!1!==r&&n.push(Object.assign(t.slice(o,o+r),{index:o}))}return n},l.lookAhead=(...e)=>t=>{for(let r of o(e))if(!1===r(t))return!1;return 0},l.end=e=>!e.length&&0;var i={regexIndexOf(e,t,r){var n=e.substring(r||0).search(t);return 0>n?n:n+(r||0)},rewriteImports(e,r){r=t(r).replace(/\\/g,"/");let n=l.zeroOrMore(l.or({type:"whitespace"},{type:"ln"},{type:"comment"})),o=l.or(["import",n,{type:"string"}],["import",n,"(",n,{type:"string"}],["from",n,{type:"string"}]);for(let t=0;e.length>t;t++){let n=o(e.slice(t));if(n){for(let o=t;t+n>o;o++)if("string"===e[o].type){let t=e[o],n=t.slice(1,-1);!r||n.startsWith("http://")||n.startsWith("https://")||(t=n.startsWith("/")?'"file:///'+r+n+'"':'"file:///'+r+"/"+n.slice(2)+'"'),e[o]=t;break}t+=n}}},findExpects(e){let t=[];for(let r of e)if("comment"===r.type&&r.startsWith("/**")){let e=r.slice(3,-2).split(/\r?\n/g),n=null;for(let o=0;e.length>o;o++){let l=e[o],a=i.regexIndexOf(l,/@\w+/);a>0?(n&&(t.push(n),n=null),l.includes("@expect")&&(n={code:l.slice(a+7),line:r.line+o,col:a+7})):null!==n&&(n.code+="\r\n"+l.replace(/(?<=^\s+)\*/," "))}n&&t.push(n)}return t},createExpectCode(e,t){let r=[],n=t.replace(/\\/g,"\\\\");for(let t of e){try{Function(t.code)}catch(e){console.error(e+` in @expect at ${n}:${t.line}:${t.col-7}`);continue}let e=t.code.split(/\r?\n/g);for(let r=0;e.length>r;r++){let o=e[r],l=o.indexOf("//=");if(-1!==l){let i=o.slice(0,l),a=o.slice(l+3).trim(),f=o.search(/\S/)+1;0===r&&(f+=t.col),e[r]=`{ let actual = ${i}, expected=${a}; if (JSON.stringify(actual) !== JSON.stringify(expected)) console.log("Actual result is " + actual + " but expected " + expected + " in @expect at ${n}:${t.line+r}:${f}."); }`}}r.push(`try { ${e.join("\r\n")} } catch(e) { console.error(e.toString() + " in @expect at ${n}:${t.line}:${t.col-7}."); }`)}return r.join("\r\n")}};let a,f,s;async function u(){let e=r(n,s,"js"),t=i.findExpects(e);if(t.length){i.rewriteImports(e,a);let r=i.createExpectCode(t,f),n="import jsdom_ZZZ from \"https://dev.jspm.io/jsdom\";\nglobalThis.document = new jsdom_ZZZ.JSDOM('<!DOCTYPE html>').window.document;\n"+e.join("")+";\r\n"+r;const o="data:text/javascript;charset=utf-8,"+encodeURIComponent(n);await import(o)}}"undefined"!=typeof Deno?(f=Deno.args[0],f&&"expect.js"!==f||(console.error("Please specify a file."),Deno.exit()),a=e(f),s=Deno.readTextFileSync(f)):(f=process.argv[2],s=fs.readFileSync(f,{encoding:"utf8",flag:"r"})),u();